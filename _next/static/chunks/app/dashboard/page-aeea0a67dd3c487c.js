(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[702],{8102:function(e,r,o){Promise.resolve().then(o.bind(o,7736))},7736:function(e,r,o){"use strict";o.r(r),o.d(r,{default:function(){return a}});var s=o(3827);o(4090);var t=o(7907),n=o(5240),i=o(3779);function a(){let e=(0,t.useRouter)(),{user:r,logout:o}=(0,i.useAuth)(),a=async()=>{try{await o(),e.push("/login")}catch(e){console.error("登出失败:",e)}};return r?(0,s.jsx)(n.default,{children:(0,s.jsx)("div",{className:"min-h-screen bg-gray-100",children:(0,s.jsx)("div",{className:"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8",children:(0,s.jsx)("div",{className:"px-4 py-6 sm:px-0",children:(0,s.jsxs)("div",{className:"bg-white overflow-hidden shadow rounded-lg",children:[(0,s.jsxs)("div",{className:"px-4 py-5 sm:p-6",children:[(0,s.jsxs)("h1",{className:"text-2xl font-bold text-gray-900",children:["欢迎回来，",r.name,"！"]}),(0,s.jsxs)("p",{className:"mt-1 text-sm text-gray-500",children:["您已登录为","headhunter"===r.userType?"猎头":"求职者"]})]}),(0,s.jsx)("div",{className:"bg-gray-50 px-4 py-5 sm:px-6",children:(0,s.jsx)("div",{className:"flex justify-end",children:(0,s.jsx)("button",{onClick:a,className:"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500",children:"登出"})})})]})})})})}):null}},3779:function(e,r,o){"use strict";o.r(r),o.d(r,{AuthProvider:function(){return i},useAuth:function(){return a}});var s=o(3827),t=o(4090);let n=(0,t.createContext)(void 0);function i(e){let{children:r}=e,[o,i]=(0,t.useState)({user:null,isAuthenticated:!1,isLoading:!0,error:null});(0,t.useEffect)(()=>{i(e=>({...e,isLoading:!1}))},[]);let a=async e=>{try{i(e=>({...e,isLoading:!0,error:null})),console.log("开始登录请求");let r=await fetch("/api/auth/login",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(console.log("登录响应状态:",r.status),!r.ok){let e=await r.json();throw Error(e.message||"登录失败")}let o=await r.json();console.log("登录成功:",o),i(e=>({...e,user:o.user,isAuthenticated:!0,isLoading:!1}))}catch(e){throw console.error("登录错误:",e),i(r=>({...r,error:e instanceof Error?e.message:"登录失败",isLoading:!1})),e}},l=async e=>{try{i(e=>({...e,isLoading:!0,error:null})),console.log("开始注册请求");let r=await fetch("/api/auth/signup",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(console.log("注册响应状态:",r.status),!r.ok){let e=await r.json();throw Error(e.message||"注册失败")}let o=await r.json();console.log("注册成功:",o),i(e=>({...e,user:o.user,isAuthenticated:!0,isLoading:!1}))}catch(e){throw console.error("注册错误:",e),i(r=>({...r,error:e instanceof Error?e.message:"注册失败",isLoading:!1})),e}},c=async()=>{try{i(e=>({...e,isLoading:!0,error:null})),console.log("开始登出请求");let e=await fetch("/api/auth/logout",{method:"POST"});if(console.log("登出响应状态:",e.status),!e.ok)throw Error("登出失败");i({user:null,isAuthenticated:!1,isLoading:!1,error:null})}catch(e){throw console.error("登出错误:",e),i(r=>({...r,error:e instanceof Error?e.message:"登出失败",isLoading:!1})),e}},u=async e=>{try{i(e=>({...e,isLoading:!0,error:null})),console.log("开始更新用户资料");let r=await fetch("/api/user/profile",{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(console.log("更新用户资料响应状态:",r.status),!r.ok){let e=await r.json();throw Error(e.message||"更新用户资料失败")}let o=await r.json();console.log("更新用户资料成功:",o),i(e=>({...e,user:o,isLoading:!1}))}catch(e){throw console.error("更新用户资料错误:",e),i(r=>({...r,error:e instanceof Error?e.message:"更新用户资料失败",isLoading:!1})),e}};return(0,s.jsx)(n.Provider,{value:{...o,login:a,signup:l,logout:c,updateProfile:u},children:r})}function a(){let e=(0,t.useContext)(n);if(void 0===e)throw Error("useAuth 必须在 AuthProvider 内部使用");return e}}},function(e){e.O(0,[901,240,971,69,744],function(){return e(e.s=8102)}),_N_E=e.O()}]);